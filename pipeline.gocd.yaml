format_version: 3

pipelines:
  build_and_publish_image:
    group: hello-world
    label_template: ${COUNT}
    lock_behavior: unlockWhenFinished
    display_order: 1
    materials:
      git:
        git: https://github.com/moises-ba/gs-spring-boot
        shallow_clone: false
        auto_update: true
        branch: master
    stages:
    - build_and_publish_image:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          build_image:
            timeout: 0
            environment_variables:
              dockerhub_user: "moisesba"
            #artifacts:
            #- build:
            #    source: initial/docker-compose.yaml
            #    destination: docker    
            #- external:
            #    id: hello-world
            #    store_id: docker_hub
            #    configuration:
            #       options:
            #          Image: ${dockerhub_user}/hello-world    
            #          Tag: ${GO_PIPELINE_LABEL}
            tasks:
            - exec:
                command: gradle
                arguments:
                - clean
                - build
                - -x
                - test
                working_directory: initial
                run_if: passed   
            - exec:
                command: bash
                arguments:
                - -c
                - "docker build -t ${dockerhub_user}/hello-world:$GO_PIPELINE_LABEL ."
                working_directory: initial
                run_if: passed

  deploy_homologacao:
    group: hello-world
    label_template: ${COUNT}
    lock_behavior: unlockWhenFinished
    display_order: 2
    materials:
      upstream:
        pipeline: build_and_publish_image
        stage: build_and_publish_image
        name: upstream
    stages:
    - deploy_homologacao:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: true
        approval:
          type: success
        jobs:
          deploy_homologacao:
            timeout: 0
            tasks:
            - fetch:
                pipeline: build_and_publish_image
                stage: build_and_publish_image
                job: build_image
                artifact_origin: gocd
                source: docker/docker-compose.yaml
                dest: docker
            - exec:
                command: bash
                arguments:
                - -c
                - "export TAG=${GO_DEPENDENCY_LABEL_UPSTREAM} && docker-compose up -d "
                run_if: passed
                working_directory: docker 
